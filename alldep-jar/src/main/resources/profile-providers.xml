<profile-providers>
	<gatf-testdata-provider>
		<providerName>mongo-profile</providerName>
		<args>
			<arg>system.profile</arg>
		</args>
		<queryStr><![CDATA[{}]]></queryStr>
		<sourceProperties>ns,query,ts,millis,client</sourceProperties>
		<providerProperties>ns,query,ts,millis,client</providerProperties>
	</gatf-testdata-provider>
	<gatf-testdata-provider>
		<providerName>mysql-profile</providerName>
		<queryStr><![CDATA[select * from mysql.slow_log]]></queryStr>
		<providerProperties>db,sql_text,start_time,query_time,user_host</providerProperties>
	</gatf-testdata-provider>
	<gatf-testdata-provider>
		<providerName>sql-server-profile</providerName>
		<queryStr><![CDATA[
			SELECT TOP 10 total_worker_time/execution_count AS Avg_CPU_Time
			        ,execution_count
			        ,total_elapsed_time/execution_count as AVG_Run_Time
			        ,(SELECT
			              SUBSTRING(text,statement_start_offset/2,(CASE
			                                                           WHEN statement_end_offset = -1 THEN LEN(CONVERT(nvarchar(max), text)) * 2 
			                                                           ELSE statement_end_offset 
			                                                       END -statement_start_offset)/2
			                       ) FROM sys.dm_exec_sql_text(sql_handle)
			         ) AS query_text 
			FROM sys.dm_exec_query_stats 
			ORDER BY Avg_CPU_Time DESC
			--ORDER BY AVG_Run_Time DESC
			--ORDER BY execution_count DESC
		]]></queryStr>
		<providerProperties>query,avgExecTime,execution_count,avgRunTime</providerProperties>
	</gatf-testdata-provider>
	<gatf-testdata-provider>
		<providerName>oracle-profile</providerName>
		<queryStr><![CDATA[
			SELECT a.sql_text "SQL statement", b.avgcputime "CPU time (s/exec)", b.avgelapstime "Elaps. time(s/exec)",
			         MAX (c.COST) "Cost", b.executions "Execs", b.TIME "Date/Time", b.module "Module"
			    FROM stats$sqltext a,
			         (SELECT DISTINCT sql_id, snap_id, executions, avgcputime, avgelapstime, module,
			                          TO_CHAR (last_active_time, 'dd-mm-yy hh24:mi') TIME
			                     FROM (SELECT DISTINCT sql_id, ROWNUM, snap_id, executions,
			                                           ROUND (cpu_time / (executions * 1000000), 0) avgcputime,
			                                           ROUND (elapsed_time / (executions * 1000000), 0) avgelapstime,
			                                           module, last_active_time
			                                      FROM stats$sql_summary
			                                     WHERE executions != 0
			                                       --AND module IN (SELECT DISTINCT module
			                                       --               FROM stats$sql_summary
			                                       --               WHERE LOWER (module) LIKE 'yourappname%')
			                                       AND TO_CHAR (last_active_time, 'DD.MM.YYYY') = TO_CHAR (SYSDATE,'DD.MM.YYYY')
			                                  ORDER BY avgelapstime DESC)
			                    WHERE ROWNUM <= 10) b,
			         stats$sql_plan_usage c
			   WHERE LOWER (a.text_subset) NOT LIKE 'insert%' AND a.sql_id = b.sql_id AND a.sql_id = c.sql_id
			GROUP BY a.sql_text,
			         a.sql_id,
			         b.avgcputime,
			         b.avgelapstime,
			         b.executions,
			         b.TIME,
			         b.module,
			         a.piece,
			         a.text_subset
			ORDER BY a.sql_id, a.piece;
		]]></queryStr>
		<providerProperties>db,sql_text,start_time,query_time,user_host</providerProperties>
	</gatf-testdata-provider>
	<gatf-testdata-provider>
		<providerName>postgre-profile</providerName>
		<queryStr><![CDATA[
			select procpid,datname,current_query,now() - pg_stat_activity.query_start as duration 
				from pg_stat_activity where pg_stat_activity.current_query <> ''::text 
				and now() - pg_stat_activity.query_start > interval '1 minutes'
		]]></queryStr>
		<providerProperties>query,procpid,datname,duration</providerProperties>
	</gatf-testdata-provider>
</profile-providers>